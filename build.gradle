buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = "1.7.10-0.1.0-SNAPSHOT"
group= "ca.bradj.byprod" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "ByProd"

minecraft {
    version = "1.7.10-10.13.2.1230"
    assetDir = "eclipse/assets"
}

repositories {
	maven {
        name 'BradJ'
        url 'http://bradj.ca:8081/nexus/content/repositories/snapshots'
 	}
	maven {
        name 'BradJ'
        url 'http://bradj.ca:8081/nexus/content/repositories/releases'
 	}
}

configurations {
    shade
    compile.extendsFrom shade
}

dependencies { 
	shade 'ca.bradj:Forge:1.7.10-1.0.0-SNAPSHOT'
    compile 'ca.bradj:OreCore:1.7.10-2.1.0'
	compile 'ca.bradj:OreCoreMin:1.7.10-1.0.2'
}

jar {
    configurations.shade.each { dep ->
        from(project.zipTree(dep)){
            exclude 'META-INF', 'META-INF/**'
        }
    }
}

minecraft {
    srgExtra "PK: ca/bradj/forge ca/bradj/orecoremin/forge"
} 

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
    
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
